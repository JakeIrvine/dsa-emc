1. i) Eve can send out a message from Alice by running the algorithm normally. Since Eve has the private key, and all parameters, she can sign her own messages with a valid Alice signature.
  ii) Message: Screw you alice!
      Signature: r = 809304215582509806415504184278247210482869715784
		 s = 648034331915913842536085741818387259052900662535

2. i) y = g^x mod p ; this will only be satisfied if x is correct 
  ii) x = 0xbeef
	we checked with part 2i and this equation was satisfied!
 iii) Message : Hi, my name is Luc√≠a
signature = (r,s) = (501253276143788752446680418155799534842887411078, 490493288456700381214967074730069495319100320485)
501253276143788752446680418155799534842887411078

3. i) k = 12345
  ii) The values of k are both the same, so it is likely that the next value of k will be 12345
 iii) x = ((sk - H(m)) / r) mod q
  iv) 314159

4. i) Both values of r are the same, so the same value of k has been used for both messsages. r is actually the same for questions 1, 2, 3 as well.
  ii) x = (s1_inv*h1-s2_inv*h2)*(s2_inv - s1_inv)*r_inv mod Q
 iii) x = 0xA11CE
  iv) cool.
   v) Because the key is sent in the first message where it is used, an attacker could simply create a new keypair using the same parameters and send a signed message using the new keypair, telling everyone the public key in that message.


5. i) The value of k in  [1-3]) was 12345, the value of k in 4) was 12346, so perhaps the value of k in 5) is 12347
  ii) x = 123123

6. i) k = (h2 - s2 - h1*r1_inv*r2) * (s2-s1*r1_inv*r2)_inv mod Q
  ii) k = 2718281828, k+1 = 2718281829, x = 0xdec0ded

7. i) k = (h2 - n*s2 -h1*r1_inv*r2) * (s2-s1*r1_inv*r2)_inv mod q, where n is the number of messages between the two messages
  ii) brute force the value of n
 iii) k = 60221409 x = 0xdeadbeef999
